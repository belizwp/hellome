stages:
#  - build
#  - package
#  - migrate
  - deploy
#
#build:
#  stage: build
#  image: hseeberger/scala-sbt:8u222_1.3.4_2.13.1
#  variables:
#    SBT_OPTS: "-Dsbt.global.base=sbt-cache/.sbtboot -Dsbt.boot.directory=sbt-cache/.boot -Dsbt.ivy.home=sbt-cache/.ivy"
##  cache:
##    key: "$CI_BUILD_REF_NAME" # contains either the branch or the tag, so it's caching per branch
##    untracked: true
##    paths:
##      - "sbt-cache/.ivy/cache"
##      - "sbt-cache/.boot"
##      - "sbt-cache/.sbtboot"
#  script:
#    - sbt clean compile dist --supershell=false
#  artifacts:
#    paths:
#      - target/universal/
#
#docker-build:
#  stage: package
#  image: docker:stable
#  services:
#    - docker:dind
#  variables:
#    DOCKER_DRIVER: overlay
#  script:
#    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
#    - docker build -t "$CI_REGISTRY_IMAGE:latest" .
#    - docker push "$CI_REGISTRY_IMAGE:latest"
#
#database-migrate:
#  stage: migrate
#  image: docker:stable
#  services:
#    - docker:dind
#  variables:
#    FLYWAY_EDITION: community
#  script:
#    - docker pull flyway/flyway
#    - docker run --rm -v ${PWD}/sql:/flyway/sql flyway/flyway -url=jdbc:h2:mem:test -user=sa migrate

deploy:
  stage: deploy
  image: google/cloud-sdk:latest
  tags:
    - cluster
  variables:
    REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE:latest"
  script:
    - echo $GCLOUD_K8S_KEY > ${HOME}/gcloud-k8s-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-k8s-key.json
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_CLUSTER_COMPUTE_ZONE --project $GCP_PROJECT_ID
    - template=`cat "deploy.yaml.template" | sed "s@{{REGISTRY_IMAGE}}@$REGISTRY_IMAGE@"`
    - echo "$template" | kubectl apply -f -
  only:
    - master
