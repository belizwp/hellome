stages:
  - build
  - package
  - migrate
  - deploy

variables:
  REGISTRY: asia.gcr.io
  REGISTRY_HOST: https://asia.gcr.io
  REGISTRY_IMAGE: "${REGISTRY}/${GCP_PROJECT_ID}/hellome"

build:
  stage: build
  image: hseeberger/scala-sbt:8u222_1.3.4_2.13.1
  variables:
    SBT_OPTS: "-Dsbt.global.base=sbt-cache/.sbtboot -Dsbt.boot.directory=sbt-cache/.boot -Dsbt.ivy.home=sbt-cache/.ivy"
  cache:
    key: "$CI_BUILD_REF_NAME" # contains either the branch or the tag, so it's caching per branch x
    untracked: true
    paths:
      - "sbt-cache/.ivy/cache"
      - "sbt-cache/.boot"
      - "sbt-cache/.sbtboot"
  script:
    - sbt compile dist --supershell=false
  artifacts:
    paths:
      - target/universal/

docker-build:
  stage: package
  image: docker:dind
  script:
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin $REGISTRY_HOST < ${HOME}/gcloud-service-key.json
    - docker build -t $REGISTRY_IMAGE .
    - docker push $REGISTRY_IMAGE

database-migrate:
  stage: migrate
  image: docker:dind
  services:
    - docker:dind
  variables:
    FLYWAY_EDITION: community
  script:
    - docker pull flyway/flyway
    - docker run --rm -v ${PWD}/sql:/flyway/sql flyway/flyway -url=jdbc:h2:mem:test -user=sa migrate

deploy:
  stage: deploy
  image: google/cloud-sdk:latest
  script:
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-k8s-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-k8s-key.json
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_CLUSTER_COMPUTE_ZONE --project $GCP_PROJECT_ID
    - template=`cat "deploy.yaml.template" | sed "s@{{REGISTRY_IMAGE}}@$REGISTRY_IMAGE@"`
    - echo "$template" | kubectl apply -f -
